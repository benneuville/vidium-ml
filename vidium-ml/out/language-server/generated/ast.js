"use strict";
/******************************************************************************
 * This file was generated by langium-cli 1.0.0.
 * DO NOT EDIT MANUALLY!
 ******************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
exports.reflection = exports.VidiumMlAstReflection = exports.isApp = exports.App = void 0;
/* eslint-disable */
const langium_1 = require("langium");
exports.App = 'App';
function isApp(item) {
    return exports.reflection.isInstance(item, exports.App);
}
exports.isApp = isApp;
class VidiumMlAstReflection extends langium_1.AbstractAstReflection {
    getAllTypes() {
        return ['App'];
    }
    computeIsSubtype(subtype, supertype) {
        switch (subtype) {
            default: {
                return false;
            }
        }
    }
    getReferenceType(refInfo) {
        const referenceId = `${refInfo.container.$type}:${refInfo.property}`;
        switch (referenceId) {
            default: {
                throw new Error(`${referenceId} is not a valid reference id.`);
            }
        }
    }
    getTypeMetaData(type) {
        switch (type) {
            default: {
                return {
                    name: type,
                    mandatory: []
                };
            }
        }
    }
}
exports.VidiumMlAstReflection = VidiumMlAstReflection;
exports.reflection = new VidiumMlAstReflection();
//# sourceMappingURL=ast.js.map